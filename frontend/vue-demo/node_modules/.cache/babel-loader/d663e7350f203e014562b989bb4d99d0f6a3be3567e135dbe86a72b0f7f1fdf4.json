{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"card-header\"\n};\nconst _hoisted_3 = {\n  class: \"description\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode($setup[\"ElRow\"], {\n    class: \"card-row\",\n    justify: \"center\",\n    gutter: 30\n  }, {\n    default: _withCtx(() => [(_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.cards, item => {\n      return _createVNode($setup[\"ElCol\"], {\n        span: 6,\n        key: item.title\n      }, {\n        default: _withCtx(() => [_createVNode($setup[\"ElCard\"], {\n          class: \"card\"\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createVNode($setup[\"ElIcon\"], {\n            size: 24\n          }, {\n            default: _withCtx(() => [(_openBlock(), _createBlock(_resolveDynamicComponent(item.icon)))]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */), _createElementVNode(\"span\", null, _toDisplayString(item.title), 1 /* TEXT */)]), _createElementVNode(\"p\", _hoisted_3, _toDisplayString(item.description), 1 /* TEXT */), _createVNode($setup[\"ElButton\"], {\n            type: \"primary\",\n            size: \"large\",\n            onClick: $event => $setup.goToPage(item.link)\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(item.buttonText), 1 /* TEXT */)]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */);\n    }), 64 /* STABLE_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","$setup","justify","gutter","default","_withCtx","_Fragment","_renderList","cards","item","span","key","title","_createElementVNode","_hoisted_2","size","_createBlock","_resolveDynamicComponent","icon","_","_toDisplayString","_hoisted_3","description","type","onClick","$event","goToPage","link","_createTextVNode","buttonText"],"sources":["E:\\PythonProject1\\frontend\\vue-demo\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <el-row class=\"card-row\" justify=\"center\" :gutter=\"30\">\n      <el-col :span=\"6\" v-for=\"item in cards\" :key=\"item.title\">\n        <el-card class=\"card\">\n          <div class=\"card-header\">\n            <el-icon :size=\"24\"><component :is=\"item.icon\" /></el-icon>\n            <span>{{ item.title }}</span>\n          </div>\n          <p class=\"description\">{{ item.description }}</p>\n          <el-button type=\"primary\" size=\"large\" @click=\"goToPage(item.link)\">\n            {{ item.buttonText }}\n          </el-button>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script setup>\nimport { ElButton, ElCard, ElRow, ElCol, ElIcon } from 'element-plus'\nimport { Document, Share, Cpu } from '@element-plus/icons-vue'\n\nconst cards = [\n  {\n    title: '需求管理',\n    description: '管理产品需求和功能点，支持版本追踪和团队协作。',\n    buttonText: '进入管理',\n    link: 'requirement.html',\n    icon: Document\n  },\n  {\n    title: '架构设计',\n    description: '可视化建模系统架构，支持多层结构设计与组件管理。',\n    buttonText: '进入设计',\n    link: 'architecture.html',\n    icon: Cpu\n  },\n  {\n    title: '代码生成',\n    description: '根据模型生成代码，支持多种语言和框架。',\n    buttonText: '立即生成',\n    link: 'codegen.html',\n    icon: Share\n  }\n]\n\nconst goToPage = (url) => {\n  window.location.href = url\n}\n</script>\n\n<style scoped>\nhtml,\nbody {\n  height: 100%;\n  margin: 0;\n}\n\n.container {\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.card-row {\n  max-width: 1200px;\n  width: 100%;\n}\n\n.card {\n  border-radius: 16px;\n  min-height: 300px; /* 增加高度 */\n  padding: 30px;      /* 增加内边距 */\n  font-size: 18px;\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.12);\n  transition: transform 0.2s;\n}\n\n.card:hover {\n  transform: translateY(-5px);\n}\n\n.card-header {\n  display: flex;\n  align-items: center;\n  font-weight: bold;\n  font-size: 24px; /* 更大字体 */\n  margin-bottom: 15px;\n}\n\n.card-header .el-icon {\n  margin-right: 12px;\n  font-size: 28px;\n}\n\n.description {\n  flex-grow: 1;\n  font-size: 16px;\n  color: #444;\n  margin-bottom: 20px;\n  line-height: 1.8;\n}\n\n.el-button {\n  font-size: 16px;\n  padding: 12px 28px;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EAITA,KAAK,EAAC;AAAa;;EAIrBA,KAAK,EAAC;AAAa;;uBAR9BC,mBAAA,CAeM,OAfNC,UAeM,GAdJC,YAAA,CAaSC,MAAA;IAbDJ,KAAK,EAAC,UAAU;IAACK,OAAO,EAAC,QAAQ;IAAEC,MAAM,EAAE;;IAFvDC,OAAA,EAAAC,QAAA,CAGwB,MAAqB,E,cAAvCP,mBAAA,CAWSQ,SAAA,QAdfC,WAAA,CAGuCN,MAAA,CAAAO,KAAK,EAAbC,IAAI;aAA7BT,YAAA,CAWSC,MAAA;QAXAS,IAAI,EAAE,CAAC;QAAyBC,GAAG,EAAEF,IAAI,CAACG;;QAHzDR,OAAA,EAAAC,QAAA,CAIQ,MASU,CATVL,YAAA,CASUC,MAAA;UATDJ,KAAK,EAAC;QAAM;UAJ7BO,OAAA,EAAAC,QAAA,CAKU,MAGM,CAHNQ,mBAAA,CAGM,OAHNC,UAGM,GAFJd,YAAA,CAA2DC,MAAA;YAAjDc,IAAI,EAAE;UAAE;YAN9BX,OAAA,EAAAC,QAAA,CAMgC,MAA6B,E,cAA7BW,YAAA,CAA6BC,wBAN7D,CAMgDR,IAAI,CAACS,IAAI,I;YANzDC,CAAA;wCAOYN,mBAAA,CAA6B,cAAAO,gBAAA,CAApBX,IAAI,CAACG,KAAK,iB,GAErBC,mBAAA,CAAiD,KAAjDQ,UAAiD,EAAAD,gBAAA,CAAvBX,IAAI,CAACa,WAAW,kBAC1CtB,YAAA,CAEYC,MAAA;YAFDsB,IAAI,EAAC,SAAS;YAACR,IAAI,EAAC,OAAO;YAAES,OAAK,EAAAC,MAAA,IAAExB,MAAA,CAAAyB,QAAQ,CAACjB,IAAI,CAACkB,IAAI;;YAV3EvB,OAAA,EAAAC,QAAA,CAWY,MAAqB,CAXjCuB,gBAAA,CAAAR,gBAAA,CAWeX,IAAI,CAACoB,UAAU,iB;YAX9BV,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}