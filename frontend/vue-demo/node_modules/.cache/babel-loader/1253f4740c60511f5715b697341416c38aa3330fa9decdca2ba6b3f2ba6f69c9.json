{"ast":null,"code":"import { onMounted, watchEffect, onBeforeUnmount } from 'vue';\nimport { addUnit } from '../../utils/dom/style.mjs';\nconst useDraggable = (targetRef, dragRef, draggable, overflow) => {\n  const transform = {\n    offsetX: 0,\n    offsetY: 0\n  };\n  const adjustPosition = (moveX, moveY) => {\n    if (targetRef.value) {\n      const {\n        offsetX,\n        offsetY\n      } = transform;\n      const targetRect = targetRef.value.getBoundingClientRect();\n      const targetLeft = targetRect.left;\n      const targetTop = targetRect.top;\n      const targetWidth = targetRect.width;\n      const targetHeight = targetRect.height;\n      const clientWidth = document.documentElement.clientWidth;\n      const clientHeight = document.documentElement.clientHeight;\n      const minLeft = -targetLeft + offsetX;\n      const minTop = -targetTop + offsetY;\n      const maxLeft = clientWidth - targetLeft - targetWidth + offsetX;\n      const maxTop = clientHeight - targetTop - targetHeight + offsetY;\n      if (!(overflow == null ? void 0 : overflow.value)) {\n        moveX = Math.min(Math.max(moveX, minLeft), maxLeft);\n        moveY = Math.min(Math.max(moveY, minTop), maxTop);\n      }\n      transform.offsetX = moveX;\n      transform.offsetY = moveY;\n      targetRef.value.style.transform = `translate(${addUnit(moveX)}, ${addUnit(moveY)})`;\n    }\n  };\n  const onMousedown = e => {\n    const downX = e.clientX;\n    const downY = e.clientY;\n    const {\n      offsetX,\n      offsetY\n    } = transform;\n    const onMousemove = e2 => {\n      const moveX = offsetX + e2.clientX - downX;\n      const moveY = offsetY + e2.clientY - downY;\n      adjustPosition(moveX, moveY);\n    };\n    const onMouseup = () => {\n      document.removeEventListener(\"mousemove\", onMousemove);\n      document.removeEventListener(\"mouseup\", onMouseup);\n    };\n    document.addEventListener(\"mousemove\", onMousemove);\n    document.addEventListener(\"mouseup\", onMouseup);\n  };\n  const onDraggable = () => {\n    if (dragRef.value && targetRef.value) {\n      dragRef.value.addEventListener(\"mousedown\", onMousedown);\n      window.addEventListener(\"resize\", updatePosition);\n    }\n  };\n  const offDraggable = () => {\n    if (dragRef.value && targetRef.value) {\n      dragRef.value.removeEventListener(\"mousedown\", onMousedown);\n      window.removeEventListener(\"resize\", updatePosition);\n    }\n  };\n  const resetPosition = () => {\n    transform.offsetX = 0;\n    transform.offsetY = 0;\n    if (targetRef.value) {\n      targetRef.value.style.transform = \"\";\n    }\n  };\n  const updatePosition = () => {\n    const {\n      offsetX,\n      offsetY\n    } = transform;\n    adjustPosition(offsetX, offsetY);\n  };\n  onMounted(() => {\n    watchEffect(() => {\n      if (draggable.value) {\n        onDraggable();\n      } else {\n        offDraggable();\n      }\n    });\n  });\n  onBeforeUnmount(() => {\n    offDraggable();\n  });\n  return {\n    resetPosition,\n    updatePosition\n  };\n};\nexport { useDraggable };","map":{"version":3,"names":["useDraggable","targetRef","dragRef","draggable","overflow","transform","offsetX","offsetY","adjustPosition","moveX","moveY","value","targetRect","getBoundingClientRect","targetLeft","left","targetTop","top","targetWidth","width","targetHeight","height","clientWidth","document","documentElement","clientHeight","minLeft","minTop","maxLeft","maxTop","Math","min","max","style","addUnit","onMousedown","e","downX","clientX","downY","clientY","onMousemove","e2","onMouseup","removeEventListener","addEventListener","onDraggable","window","updatePosition","offDraggable","resetPosition","onMounted","watchEffect","onBeforeUnmount"],"sources":["../../../../../packages/hooks/use-draggable/index.ts"],"sourcesContent":["import { onBeforeUnmount, onMounted, watchEffect } from 'vue'\nimport { addUnit } from '@element-plus/utils'\nimport type { ComputedRef, Ref } from 'vue'\n\nexport const useDraggable = (\n  targetRef: Ref<HTMLElement | undefined>,\n  dragRef: Ref<HTMLElement | undefined>,\n  draggable: ComputedRef<boolean>,\n  overflow?: ComputedRef<boolean>\n) => {\n  const transform = {\n    offsetX: 0,\n    offsetY: 0,\n  }\n\n  const adjustPosition = (moveX: number, moveY: number) => {\n    if (targetRef.value) {\n      const { offsetX, offsetY } = transform\n      const targetRect = targetRef.value.getBoundingClientRect()\n      const targetLeft = targetRect.left\n      const targetTop = targetRect.top\n      const targetWidth = targetRect.width\n      const targetHeight = targetRect.height\n\n      const clientWidth = document.documentElement.clientWidth\n      const clientHeight = document.documentElement.clientHeight\n\n      const minLeft = -targetLeft + offsetX\n      const minTop = -targetTop + offsetY\n      const maxLeft = clientWidth - targetLeft - targetWidth + offsetX\n      const maxTop = clientHeight - targetTop - targetHeight + offsetY\n\n      if (!overflow?.value) {\n        moveX = Math.min(Math.max(moveX, minLeft), maxLeft)\n        moveY = Math.min(Math.max(moveY, minTop), maxTop)\n      }\n\n      transform.offsetX = moveX\n      transform.offsetY = moveY\n\n      targetRef.value.style.transform = `translate(${addUnit(moveX)}, ${addUnit(\n        moveY\n      )})`\n    }\n  }\n\n  const onMousedown = (e: MouseEvent) => {\n    const downX = e.clientX\n    const downY = e.clientY\n    const { offsetX, offsetY } = transform\n\n    const onMousemove = (e: MouseEvent) => {\n      const moveX = offsetX + e.clientX - downX\n      const moveY = offsetY + e.clientY - downY\n\n      adjustPosition(moveX, moveY)\n    }\n\n    const onMouseup = () => {\n      document.removeEventListener('mousemove', onMousemove)\n      document.removeEventListener('mouseup', onMouseup)\n    }\n\n    document.addEventListener('mousemove', onMousemove)\n    document.addEventListener('mouseup', onMouseup)\n  }\n\n  const onDraggable = () => {\n    if (dragRef.value && targetRef.value) {\n      dragRef.value.addEventListener('mousedown', onMousedown)\n      window.addEventListener('resize', updatePosition)\n    }\n  }\n\n  const offDraggable = () => {\n    if (dragRef.value && targetRef.value) {\n      dragRef.value.removeEventListener('mousedown', onMousedown)\n      window.removeEventListener('resize', updatePosition)\n    }\n  }\n\n  const resetPosition = () => {\n    transform.offsetX = 0\n    transform.offsetY = 0\n\n    if (targetRef.value) {\n      targetRef.value.style.transform = ''\n    }\n  }\n\n  const updatePosition = () => {\n    const { offsetX, offsetY } = transform\n\n    adjustPosition(offsetX, offsetY)\n  }\n\n  onMounted(() => {\n    watchEffect(() => {\n      if (draggable.value) {\n        onDraggable()\n      } else {\n        offDraggable()\n      }\n    })\n  })\n\n  onBeforeUnmount(() => {\n    offDraggable()\n  })\n\n  return {\n    resetPosition,\n    updatePosition,\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}