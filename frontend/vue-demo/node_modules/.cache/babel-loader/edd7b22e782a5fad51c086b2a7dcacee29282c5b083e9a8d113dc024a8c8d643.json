{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { defineComponent, ref, getCurrentInstance, provide, reactive, toRefs, computed, onMounted, withDirectives, openBlock, createElementBlock, normalizeClass, createElementVNode, toDisplayString, renderSlot, vShow, isVNode } from 'vue';\nimport { useMutationObserver } from '@vueuse/core';\nimport { selectGroupKey } from './token.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { castArray } from 'lodash-unified';\nimport { isArray } from '@vue/shared';\nconst _sfc_main = defineComponent({\n  name: \"ElOptionGroup\",\n  componentName: \"ElOptionGroup\",\n  props: {\n    label: String,\n    disabled: Boolean\n  },\n  setup(props) {\n    const ns = useNamespace(\"select\");\n    const groupRef = ref();\n    const instance = getCurrentInstance();\n    const children = ref([]);\n    provide(selectGroupKey, reactive({\n      ...toRefs(props)\n    }));\n    const visible = computed(() => children.value.some(option => option.visible === true));\n    const isOption = node => {\n      var _a;\n      return node.type.name === \"ElOption\" && !!((_a = node.component) == null ? void 0 : _a.proxy);\n    };\n    const flattedChildren = node => {\n      const nodes = castArray(node);\n      const children2 = [];\n      nodes.forEach(child => {\n        var _a;\n        if (!isVNode(child)) return;\n        if (isOption(child)) {\n          children2.push(child.component.proxy);\n        } else if (isArray(child.children) && child.children.length) {\n          children2.push(...flattedChildren(child.children));\n        } else if ((_a = child.component) == null ? void 0 : _a.subTree) {\n          children2.push(...flattedChildren(child.component.subTree));\n        }\n      });\n      return children2;\n    };\n    const updateChildren = () => {\n      children.value = flattedChildren(instance.subTree);\n    };\n    onMounted(() => {\n      updateChildren();\n    });\n    useMutationObserver(groupRef, updateChildren, {\n      attributes: true,\n      subtree: true,\n      childList: true\n    });\n    return {\n      groupRef,\n      visible,\n      ns\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return withDirectives((openBlock(), createElementBlock(\"ul\", {\n    ref: \"groupRef\",\n    class: normalizeClass(_ctx.ns.be(\"group\", \"wrap\"))\n  }, [createElementVNode(\"li\", {\n    class: normalizeClass(_ctx.ns.be(\"group\", \"title\"))\n  }, toDisplayString(_ctx.label), 3), createElementVNode(\"li\", null, [createElementVNode(\"ul\", {\n    class: normalizeClass(_ctx.ns.b(\"group\"))\n  }, [renderSlot(_ctx.$slots, \"default\")], 2)])], 2)), [[vShow, _ctx.visible]]);\n}\nvar OptionGroup = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"option-group.vue\"]]);\nexport { OptionGroup as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","componentName","props","label","String","disabled","Boolean","setup","ns","useNamespace","groupRef","ref","instance","getCurrentInstance","children","provide","selectGroupKey","reactive","toRefs","visible","computed","value","some","option","isOption","node","_a","type","component","proxy","flattedChildren","nodes","castArray","children2","forEach","child","isVNode","push","isArray","length","subTree","updateChildren","onMounted","useMutationObserver","attributes","subtree","childList","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","withDirectives","openBlock","createElementBlock","class","normalizeClass","be","toDisplayString","createElementVNode","b","renderSlot","$slots","vShow","OptionGroup","_export_sfc"],"sources":["../../../../../../packages/components/select/src/option-group.vue"],"sourcesContent":["<template>\n  <ul v-show=\"visible\" ref=\"groupRef\" :class=\"ns.be('group', 'wrap')\">\n    <li :class=\"ns.be('group', 'title')\">{{ label }}</li>\n    <li>\n      <ul :class=\"ns.b('group')\">\n        <slot />\n      </ul>\n    </li>\n  </ul>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  isVNode,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  toRefs,\n} from 'vue'\nimport { useMutationObserver } from '@vueuse/core'\nimport { ensureArray, isArray } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { selectGroupKey } from './token'\n\nimport type { Component, VNode, VNodeArrayChildren } from 'vue'\nimport type { OptionInternalInstance, OptionPublicInstance } from './type'\n\nexport default defineComponent({\n  name: 'ElOptionGroup',\n  componentName: 'ElOptionGroup',\n\n  props: {\n    /**\n     * @description name of the group\n     */\n    label: String,\n    /**\n     * @description whether to disable all options in this group\n     */\n    disabled: Boolean,\n  },\n  setup(props) {\n    const ns = useNamespace('select')\n    const groupRef = ref<HTMLElement>()\n    const instance = getCurrentInstance()!\n    const children = ref<OptionPublicInstance[]>([])\n\n    provide(\n      selectGroupKey,\n      reactive({\n        ...toRefs(props),\n      })\n    )\n\n    const visible = computed(() =>\n      children.value.some((option) => option.visible === true)\n    )\n\n    const isOption = (\n      node: VNode\n    ): node is VNode & { component: OptionInternalInstance } =>\n      (node.type as Component).name === 'ElOption' && !!node.component?.proxy\n\n    // get all instances of options\n    const flattedChildren = (node: VNode | VNodeArrayChildren) => {\n      const nodes = ensureArray(node) as VNode[] | VNodeArrayChildren\n      const children: OptionPublicInstance[] = []\n\n      nodes.forEach((child) => {\n        if (!isVNode(child)) return\n\n        if (isOption(child)) {\n          children.push(child.component.proxy)\n        } else if (isArray(child.children) && child.children.length) {\n          children.push(...flattedChildren(child.children))\n        } else if (child.component?.subTree) {\n          children.push(...flattedChildren(child.component.subTree))\n        }\n      })\n\n      return children\n    }\n\n    const updateChildren = () => {\n      children.value = flattedChildren(instance.subTree)\n    }\n\n    onMounted(() => {\n      updateChildren()\n    })\n\n    useMutationObserver(groupRef, updateChildren, {\n      attributes: true,\n      subtree: true,\n      childList: true,\n    })\n\n    return {\n      groupRef,\n      visible,\n      ns,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;;;;;;;AA+BA,MAAKA,SAAA,GAAaC,eAAa;EAC7BC,IAAM;EACNC,aAAe;EAEfC,KAAO;IAAAC,KAAA,EAAAC,MAAA;IAAAC,QAAA,EAAAC;EAAA;EAAAC,KAIEA,CAAAL,KAAA;IAAA,MAAAM,EAAA,GAAAC,YAAA;IAAA,MAAAC,QAAA,GAAAC,GAAA;IAAA,MAAAC,QAAA,GAAAC,kBAAA;IAIP,MAAUC,QAAA,GAAAH,GAAA;IACZI,OAAA,CAAAC,cAAA,EAAAC,QAAA;MAAA,GACaC,MAAA,CAAAhB,KAAA;IACX,CAAM;IACN,MAAMiB,OAAA,GAAAC,QAA4B,OAAAN,QAAA,CAAAO,KAAA,CAAAC,IAAA,CAAAC,MAAA,IAAAA,MAAA,CAAAJ,OAAA;IAClC,MAAMK,QAAA,GAA8BC,IAAA;MAC9B,IAAAC,EAAA;MAEN,OAAAD,IAAA,CAAAE,IAAA,CAAA3B,IAAA,uBAAA0B,EAAA,GAAAD,IAAA,CAAAG,SAAA,qBAAAF,EAAA,CAAAG,KAAA;IAAA,CACE;IAAA,MACSC,eAAA,GAAAL,IAAA;MACP,MAAAM,KAAA,GAAeC,SAAA,CAAAP,IAAA;MACjB,MAACQ,SAAA;MACHF,KAAA,CAAAG,OAAA,CAAAC,KAAA;QAEA,IAAgBT,EAAA;QAAS,IACvB,CAAAU,OAAA,CAASD,KAAM,GACjB;QAEM,IAAAX,QAAA,CAAWW,KACf;UAKIF,SAAA,CAAAI,IAAA,CAAAF,KAAwD,CAAAP,SAAA,CAAAC,KAAA;QAC5D,CAAM,UAAAS,OAAA,CAAAH,KAAoB,CAAIrB,QAAA,KAAAqB,KAAA,CAAArB,QAAA,CAAAyB,MAAA;UAC9BN,SAAA,CAAAI,IAAyC,CAAC,GAAAP,eAAA,CAAAK,KAAA,CAAArB,QAAA;QAE1C,CAAM,WAAQY,EAAW,GAAAS,KAAA,CAAAP,SAAA,qBAAAF,EAAA,CAAAc,OAAA;UACnBP,SAAS,CAAAI,IAAA,IAAQP,eAAA,CAAAK,KAAA,CAAAP,SAAA,CAAAY,OAAA;QAErB;MACE;MAAmC,OAAAP,SAClB;IACjB;IACF,MAAAQ,cAAiB,GAAAA,CAAA;MACf3B,QAAA,CAAAO,KAAS,GAAKS,eAAA,CAAAlB,QAAyB,CAAA4B,OAAA;IAAkB,CAC3D;IAAAE,SACD;MAEMD,cAAA;IAAA,CACT;IAEAE,mBAAA,CAAAjC,QAA6B,EAAA+B,cAAA;MAClBG,UAAA;MACXC,OAAA;MAEAC,SAAgB;IACd,CAAe;IACjB,OAAC;MAEDpC,QAAA;MACES,OAAY;MACZX;IAAS;EACE;AAGb,CAAO;AACL,SACAuC,YAAAC,IAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,QAAA;EACA,OAAAC,cAAA,EAAAC,SAAA,IAAAC,kBAAA;IACF7C,GAAA;IACF8C,KAAA,EAAAC,cAAA,CAAAV,IAAA,CAAAxC,EAAA,CAAAmD,EAAA;EACF,CAAC,G;;EA1GC,GAAAC,eAAA,CAAAZ,IAAA,CAAA7C,KAAA,OAOK0D,kBAAA,cAAAA,kBAAA;IAPoBJ,KAAA,EAAAC,cAAA,CAAAV,IAAA,CAAAxC,EAAA,CAAAsD,CAAA;EAAA,CAAY,GAAYC,UAAA,CAAAf,IAAA,CAAAgB,MAAA,a,KAC/C,EAAqD,SAAAC,KAAA,EAAAjB,IAAA,CAAA7B,OAAA,EAAhD;AAAY;AAA4B,IAAA+C,WAAA,kBAAAC,WAAA,CAAArE,SAAA,cAAAiD,WAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}